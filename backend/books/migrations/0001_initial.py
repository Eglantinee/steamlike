# Generated by Django 3.1.5 on 2021-01-05 18:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('author_id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=45, null=True)),
                ('last_name', models.CharField(blank=True, max_length=45, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'author',
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('genre_id', models.IntegerField(primary_key=True, serialize=False)),
                ('genre_name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'genres',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('publisher_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'publisher',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('group_id', models.IntegerField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'user_group',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=45, null=True)),
                ('first_name', models.CharField(blank=True, max_length=45, null=True)),
                ('last_name', models.CharField(blank=True, max_length=45, null=True)),
                ('nickname', models.CharField(blank=True, max_length=45, null=True)),
                ('sex', models.CharField(blank=True, max_length=45, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=45, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('groups', models.ManyToManyField(to='books.UserGroup')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('series_id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=45, null=True)),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='books.publisher')),
            ],
            options={
                'db_table': 'series',
                'unique_together': {('series_id', 'publisher')},
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=45, null=True)),
                ('year', models.DateField(blank=True, null=True)),
                ('num_of_pages', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('url', models.CharField(blank=True, max_length=45, null=True)),
                ('images', models.TextField(blank=True, null=True)),
                ('annotation', models.CharField(blank=True, max_length=45, null=True)),
                ('authors', models.ManyToManyField(to='books.Author')),
                ('genres', models.ManyToManyField(to='books.Genres')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='books.publisher')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='books.series')),
            ],
            options={
                'db_table': 'book',
                'unique_together': {('book_id', 'publisher', 'series')},
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.IntegerField(primary_key=True, serialize=False)),
                ('text', models.CharField(blank=True, max_length=45, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='books.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='books.user')),
            ],
            options={
                'db_table': 'comment',
                'unique_together': {('comment_id', 'book', 'user')},
            },
        ),
        migrations.CreateModel(
            name='BookHasUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='books.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='books.user')),
            ],
            options={
                'db_table': 'book_has_user',
                'unique_together': {('book', 'user')},
            },
        ),
    ]
